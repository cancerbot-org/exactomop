# Generated by Django 5.2.5 on 2025-08-10 12:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                ("location_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("address_1", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("zip", models.CharField(blank=True, max_length=20)),
                ("country_concept_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "location",
                "indexes": [
                    models.Index(fields=["zip"], name="location_zip_0f5ae9_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                ("person_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("gender_concept_id", models.IntegerField()),
                ("year_of_birth", models.IntegerField(blank=True, null=True)),
                ("month_of_birth", models.IntegerField(blank=True, null=True)),
                ("day_of_birth", models.IntegerField(blank=True, null=True)),
                ("race_concept_id", models.IntegerField(blank=True, null=True)),
                ("ethnicity_concept_id", models.IntegerField(blank=True, null=True)),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="omop.location",
                    ),
                ),
            ],
            options={
                "db_table": "person",
            },
        ),
        migrations.CreateModel(
            name="Observation",
            fields=[
                (
                    "observation_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("observation_concept_id", models.IntegerField()),
                ("observation_date", models.DateField()),
                ("value_as_number", models.FloatField(blank=True, null=True)),
                ("value_as_string", models.CharField(blank=True, max_length=255)),
                ("value_as_concept_id", models.IntegerField(blank=True, null=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="omop.person"
                    ),
                ),
            ],
            options={
                "db_table": "observation",
            },
        ),
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "measurement_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("measurement_concept_id", models.IntegerField()),
                ("measurement_date", models.DateField()),
                ("value_as_number", models.FloatField(blank=True, null=True)),
                ("value_as_concept_id", models.IntegerField(blank=True, null=True)),
                ("unit_concept_id", models.IntegerField(blank=True, null=True)),
                ("modifier_of_event_id", models.BigIntegerField(blank=True, null=True)),
                (
                    "modifier_of_field_concept_id",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="omop.person"
                    ),
                ),
            ],
            options={
                "db_table": "measurement",
            },
        ),
        migrations.CreateModel(
            name="Episode",
            fields=[
                ("episode_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("episode_concept_id", models.IntegerField()),
                ("episode_start_date", models.DateField()),
                ("episode_end_date", models.DateField(blank=True, null=True)),
                ("episode_number", models.IntegerField(blank=True, null=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="omop.person"
                    ),
                ),
            ],
            options={
                "db_table": "episode",
            },
        ),
        migrations.CreateModel(
            name="DrugExposure",
            fields=[
                (
                    "drug_exposure_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("drug_concept_id", models.IntegerField()),
                ("drug_exposure_start_date", models.DateField()),
                ("drug_exposure_end_date", models.DateField(blank=True, null=True)),
                ("route_concept_id", models.IntegerField(blank=True, null=True)),
                ("dose", models.FloatField(blank=True, null=True)),
                ("dose_unit_concept_id", models.IntegerField(blank=True, null=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="omop.person"
                    ),
                ),
            ],
            options={
                "db_table": "drug_exposure",
            },
        ),
        migrations.CreateModel(
            name="ConditionOccurrence",
            fields=[
                (
                    "condition_occurrence_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("condition_concept_id", models.IntegerField()),
                ("condition_start_date", models.DateField()),
                ("condition_end_date", models.DateField(blank=True, null=True)),
                (
                    "condition_type_concept_id",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="omop.person"
                    ),
                ),
            ],
            options={
                "db_table": "condition_occurrence",
            },
        ),
        migrations.CreateModel(
            name="ProcedureOccurrence",
            fields=[
                (
                    "procedure_occurrence_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("procedure_concept_id", models.IntegerField()),
                ("procedure_date", models.DateField()),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="omop.person"
                    ),
                ),
            ],
            options={
                "db_table": "procedure_occurrence",
            },
        ),
        migrations.CreateModel(
            name="EpisodeEvent",
            fields=[
                (
                    "episode_event_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("event_field_concept_id", models.IntegerField()),
                ("event_id", models.BigIntegerField()),
                (
                    "episode",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="omop.episode"
                    ),
                ),
            ],
            options={
                "db_table": "episode_event",
                "indexes": [
                    models.Index(
                        fields=["episode"], name="episode_eve_episode_c7b37c_idx"
                    ),
                    models.Index(
                        fields=["event_field_concept_id"],
                        name="episode_eve_event_f_31115a_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="person",
            index=models.Index(
                fields=["gender_concept_id"], name="person_gender__5d32aa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="observation",
            index=models.Index(
                fields=["person"], name="observation_person__08cc56_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="observation",
            index=models.Index(
                fields=["observation_concept_id"], name="observation_observa_620557_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="observation",
            index=models.Index(
                fields=["observation_date"], name="observation_observa_981e61_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="measurement",
            index=models.Index(
                fields=["person"], name="measurement_person__e8eb0d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="measurement",
            index=models.Index(
                fields=["measurement_concept_id"], name="measurement_measure_56f692_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="measurement",
            index=models.Index(
                fields=["measurement_date"], name="measurement_measure_85b487_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="episode",
            index=models.Index(fields=["person"], name="episode_person__5042c5_idx"),
        ),
        migrations.AddIndex(
            model_name="episode",
            index=models.Index(
                fields=["episode_concept_id"], name="episode_episode_e6480f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="episode",
            index=models.Index(
                fields=["episode_start_date"], name="episode_episode_dec526_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="drugexposure",
            index=models.Index(
                fields=["person"], name="drug_exposu_person__997885_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="drugexposure",
            index=models.Index(
                fields=["drug_concept_id"], name="drug_exposu_drug_co_ff492c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="drugexposure",
            index=models.Index(
                fields=["drug_exposure_start_date"],
                name="drug_exposu_drug_ex_c5e70c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="conditionoccurrence",
            index=models.Index(
                fields=["person"], name="condition_o_person__f913ee_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conditionoccurrence",
            index=models.Index(
                fields=["condition_concept_id"], name="condition_o_conditi_219c6a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conditionoccurrence",
            index=models.Index(
                fields=["condition_start_date"], name="condition_o_conditi_5187ef_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="procedureoccurrence",
            index=models.Index(
                fields=["person"], name="procedure_o_person__40b754_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="procedureoccurrence",
            index=models.Index(
                fields=["procedure_concept_id"], name="procedure_o_procedu_4c2dc4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="procedureoccurrence",
            index=models.Index(
                fields=["procedure_date"], name="procedure_o_procedu_3ab5f8_idx"
            ),
        ),
    ]
