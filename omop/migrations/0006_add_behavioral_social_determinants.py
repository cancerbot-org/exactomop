# Generated by Django 5.2.5 on 2025-08-28 23:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('omop', '0005_add_treatment_line_tracking'),
    ]

    operations = [
        migrations.CreateModel(
            name='BehavioralVocabulary',
            fields=[
                ('vocabulary_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('observation_type', models.CharField(choices=[('smoking_status', 'Smoking/Tobacco Use Status'), ('substance_use', 'Substance Use Assessment'), ('alcohol_use', 'Alcohol Use Assessment'), ('contraceptive_use', 'Contraceptive Use'), ('pregnancy_status', 'Pregnancy Status'), ('menopausal_status', 'Menopausal Status'), ('infectious_disease', 'Infectious Disease Status'), ('caregiver_status', 'Caregiver/Social Support'), ('consent_capability', 'Consent Capability'), ('mental_health', 'Mental Health Status'), ('geographic_risk', 'Geographic Risk Exposure'), ('social_determinant', 'Social Determinant of Health'), ('reproductive_health', 'Reproductive Health Status')], help_text='Type of behavioral observation', max_length=30)),
                ('observation_name', models.CharField(help_text='Standardized observation name', max_length=200)),
                ('observation_aliases', models.TextField(blank=True, help_text='Alternative names/terms')),
                ('loinc_code', models.CharField(blank=True, help_text='LOINC code for observation', max_length=20)),
                ('snomed_code', models.CharField(blank=True, help_text='SNOMED code for observation', max_length=20)),
                ('icd10_code', models.CharField(blank=True, help_text='ICD-10 code if applicable', max_length=10)),
                ('exclusion_criterion', models.BooleanField(default=False, help_text='Commonly used as exclusion criterion')),
                ('inclusion_criterion', models.BooleanField(default=False, help_text='Commonly used as inclusion criterion')),
                ('risk_assessment_factor', models.BooleanField(default=False, help_text='Used for risk assessment')),
                ('assessment_method', models.TextField(blank=True, help_text='Standard assessment methodology')),
                ('validated_instruments', models.TextField(blank=True, help_text='Validated assessment instruments')),
                ('clinical_cutoffs', models.JSONField(blank=True, help_text='Clinical cutoffs and thresholds', null=True)),
                ('applicable_populations', models.TextField(blank=True, help_text='Applicable patient populations')),
                ('contraindications', models.TextField(blank=True, help_text='When not to assess')),
                ('clinical_significance', models.TextField(help_text='Clinical significance description')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
                ('curator', models.CharField(blank=True, help_text='Curator/reviewer', max_length=200)),
            ],
            options={
                'db_table': 'behavioral_vocabulary',
            },
        ),
        migrations.CreateModel(
            name='InfectiousDiseaseVocabulary',
            fields=[
                ('vocabulary_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('disease_name', models.CharField(help_text='Standardized disease name', max_length=200)),
                ('disease_aliases', models.TextField(blank=True, help_text='Alternative names/abbreviations')),
                ('pathogen_type', models.CharField(choices=[('VIRUS', 'Viral'), ('BACTERIA', 'Bacterial'), ('FUNGUS', 'Fungal'), ('PARASITE', 'Parasitic'), ('PRION', 'Prion'), ('OTHER', 'Other')], help_text='Type of pathogen', max_length=20)),
                ('icd10_code', models.CharField(blank=True, help_text='ICD-10 code', max_length=10)),
                ('snomed_code', models.CharField(blank=True, help_text='SNOMED code', max_length=20)),
                ('exclusion_criterion', models.BooleanField(default=False, help_text='Commonly used as exclusion criterion')),
                ('requires_monitoring', models.BooleanField(default=False, help_text='Requires monitoring during treatment')),
                ('drug_interaction_risk', models.BooleanField(default=False, help_text='Risk of drug interactions')),
                ('standard_tests', models.JSONField(blank=True, help_text='Standard diagnostic tests', null=True)),
                ('test_interpretation', models.TextField(blank=True, help_text='Test result interpretation')),
                ('screening_recommendations', models.TextField(blank=True, help_text='Screening recommendations')),
                ('treatment_considerations', models.TextField(blank=True, help_text='Treatment considerations for trials')),
                ('monitoring_requirements', models.TextField(blank=True, help_text='Monitoring requirements')),
                ('precautions', models.TextField(blank=True, help_text='Special precautions')),
                ('endemic_regions', models.TextField(blank=True, help_text='Geographic regions where endemic')),
                ('travel_risk_areas', models.TextField(blank=True, help_text='Travel-related risk areas')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
                ('curator', models.CharField(blank=True, help_text='Curator/reviewer', max_length=200)),
            ],
            options={
                'db_table': 'infectious_disease_vocabulary',
            },
        ),
        migrations.CreateModel(
            name='SocialDeterminantsVocabulary',
            fields=[
                ('vocabulary_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('determinant_category', models.CharField(help_text='Category of social determinant', max_length=50)),
                ('determinant_name', models.CharField(help_text='Standardized determinant name', max_length=200)),
                ('determinant_aliases', models.TextField(blank=True, help_text='Alternative names/terms')),
                ('loinc_code', models.CharField(blank=True, help_text='LOINC code for determinant', max_length=20)),
                ('snomed_code', models.CharField(blank=True, help_text='SNOMED code for determinant', max_length=20)),
                ('z_code', models.CharField(blank=True, help_text='ICD-10 Z-code for social factor', max_length=10)),
                ('affects_eligibility', models.BooleanField(default=False, help_text='Affects clinical trial eligibility')),
                ('affects_compliance', models.BooleanField(default=False, help_text='Affects treatment compliance')),
                ('affects_outcomes', models.BooleanField(default=False, help_text='Affects clinical outcomes')),
                ('assessment_method', models.TextField(blank=True, help_text='How to assess this determinant')),
                ('screening_questions', models.JSONField(blank=True, help_text='Standard screening questions', null=True)),
                ('intervention_options', models.TextField(blank=True, help_text='Possible interventions')),
                ('health_impact_level', models.CharField(blank=True, choices=[('HIGH', 'High Impact'), ('MODERATE', 'Moderate Impact'), ('LOW', 'Low Impact'), ('UNKNOWN', 'Unknown Impact')], help_text='Level of health impact', max_length=10)),
                ('evidence_base', models.TextField(blank=True, help_text='Evidence for health impact')),
                ('clinical_recommendations', models.TextField(blank=True, help_text='Clinical practice recommendations')),
                ('geographic_specificity', models.CharField(blank=True, help_text='Geographic areas where relevant', max_length=100)),
                ('demographic_specificity', models.CharField(blank=True, help_text='Specific demographic groups', max_length=100)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
                ('curator', models.CharField(blank=True, help_text='Curator/reviewer', max_length=200)),
            ],
            options={
                'db_table': 'social_determinants_vocabulary',
            },
        ),
        migrations.AddField(
            model_name='observation',
            name='alcohol_use_level',
            field=models.CharField(blank=True, choices=[('never', 'Never'), ('minimal', 'Minimal (< 1 drink/week)'), ('light', 'Light (1-7 drinks/week)'), ('moderate', 'Moderate (8-14 drinks/week)'), ('heavy', 'Heavy (> 14 drinks/week)'), ('binge', 'Binge Drinking Pattern'), ('former_user', 'Former Alcohol User'), ('unknown', 'Unknown')], help_text='Level of alcohol consumption', max_length=15),
        ),
        migrations.AddField(
            model_name='observation',
            name='anxiety_screening_score',
            field=models.IntegerField(blank=True, help_text='Anxiety screening score (GAD-7, etc.)', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='assessment_method',
            field=models.CharField(blank=True, help_text='Method used for behavioral/social assessment (interview, questionnaire, etc.)', max_length=100),
        ),
        migrations.AddField(
            model_name='observation',
            name='assessment_provider',
            field=models.CharField(blank=True, help_text='Provider who performed behavioral/social assessment', max_length=255),
        ),
        migrations.AddField(
            model_name='observation',
            name='behavioral_category',
            field=models.CharField(blank=True, choices=[('smoking_status', 'Smoking/Tobacco Use Status'), ('substance_use', 'Substance Use Assessment'), ('alcohol_use', 'Alcohol Use Assessment'), ('contraceptive_use', 'Contraceptive Use'), ('pregnancy_status', 'Pregnancy Status'), ('menopausal_status', 'Menopausal Status'), ('infectious_disease', 'Infectious Disease Status'), ('caregiver_status', 'Caregiver/Social Support'), ('consent_capability', 'Consent Capability'), ('mental_health', 'Mental Health Status'), ('geographic_risk', 'Geographic Risk Exposure'), ('social_determinant', 'Social Determinant of Health'), ('reproductive_health', 'Reproductive Health Status')], help_text='Category of behavioral/social observation', max_length=30),
        ),
        migrations.AddField(
            model_name='observation',
            name='behavioral_data_complete',
            field=models.BooleanField(default=False, help_text='Indicates if behavioral assessment is complete'),
        ),
        migrations.AddField(
            model_name='observation',
            name='caregiver_relationship',
            field=models.CharField(blank=True, help_text='Relationship to primary caregiver', max_length=100),
        ),
        migrations.AddField(
            model_name='observation',
            name='caregiver_status',
            field=models.CharField(blank=True, choices=[('available_family', 'Family Caregiver Available'), ('available_friend', 'Friend/Non-family Caregiver Available'), ('available_professional', 'Professional Caregiver Available'), ('limited_support', 'Limited Caregiver Support'), ('no_caregiver', 'No Caregiver Available'), ('self_care', 'Independent/Self-Care'), ('unknown', 'Unknown Caregiver Status')], help_text='Caregiver availability and type', max_length=25),
        ),
        migrations.AddField(
            model_name='observation',
            name='cognitive_assessment_score',
            field=models.IntegerField(blank=True, help_text='Cognitive assessment score (MMSE, MoCA, etc.)', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='consent_capability',
            field=models.CharField(blank=True, choices=[('capable', 'Capable of Informed Consent'), ('impaired', 'Impaired Consent Capability'), ('guardian_required', 'Guardian/Proxy Consent Required'), ('fluctuating', 'Fluctuating Cognitive Status'), ('assessed_capable', 'Formally Assessed as Capable'), ('not_assessed', 'Consent Capability Not Assessed'), ('unknown', 'Unknown Consent Capability')], help_text='Capability to provide informed consent', max_length=20),
        ),
        migrations.AddField(
            model_name='observation',
            name='contraceptive_method',
            field=models.CharField(blank=True, choices=[('none', 'No Contraception'), ('hormonal_oral', 'Oral Contraceptive Pills'), ('hormonal_patch', 'Contraceptive Patch'), ('hormonal_ring', 'Vaginal Ring'), ('hormonal_injection', 'Injectable Contraceptive'), ('hormonal_implant', 'Contraceptive Implant'), ('iud_hormonal', 'Hormonal IUD'), ('iud_copper', 'Copper IUD'), ('barrier_condom', 'Condoms'), ('barrier_diaphragm', 'Diaphragm'), ('sterilization', 'Surgical Sterilization'), ('natural_methods', 'Natural Family Planning'), ('emergency', 'Emergency Contraception'), ('unknown', 'Unknown Method')], help_text='Current contraceptive method', max_length=20),
        ),
        migrations.AddField(
            model_name='observation',
            name='contraindication_reason',
            field=models.TextField(blank=True, help_text='Specific behavioral/social reasons for trial exclusion'),
        ),
        migrations.AddField(
            model_name='observation',
            name='depression_screening_score',
            field=models.IntegerField(blank=True, help_text='Depression screening score (PHQ-9, etc.)', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='drinks_per_week',
            field=models.IntegerField(blank=True, help_text='Average number of alcoholic drinks per week', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='eligible_for_trials',
            field=models.BooleanField(blank=True, help_text='General eligibility for clinical trials based on behavioral factors', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='endemic_disease_exposure',
            field=models.TextField(blank=True, help_text='Exposure to endemic diseases in travel/residence areas'),
        ),
        migrations.AddField(
            model_name='observation',
            name='environmental_toxin_exposure',
            field=models.TextField(blank=True, help_text='Environmental toxin exposure details'),
        ),
        migrations.AddField(
            model_name='observation',
            name='geographic_risk_category',
            field=models.CharField(blank=True, choices=[('no_risk', 'No Geographic Risk Exposure'), ('endemic_disease', 'Endemic Disease Area Exposure'), ('environmental_toxin', 'Environmental Toxin Exposure'), ('radiation_exposure', 'Radiation Exposure Area'), ('infectious_outbreak', 'Infectious Disease Outbreak Area'), ('occupational_hazard', 'Occupational Hazard Exposure'), ('conflict_zone', 'Conflict Zone/War Area'), ('natural_disaster', 'Natural Disaster Area'), ('high_altitude', 'High Altitude Exposure'), ('extreme_climate', 'Extreme Climate Exposure'), ('other', 'Other Geographic Risk'), ('unknown', 'Unknown Geographic Risk Status')], help_text='Category of geographic risk exposure', max_length=25),
        ),
        migrations.AddField(
            model_name='observation',
            name='infection_test_date',
            field=models.DateField(blank=True, help_text='Date of infectious disease test', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='infection_test_result',
            field=models.CharField(blank=True, help_text='Detailed infectious disease test result', max_length=255),
        ),
        migrations.AddField(
            model_name='observation',
            name='infectious_disease_status',
            field=models.CharField(blank=True, choices=[('negative', 'Negative/Not Infected'), ('positive_active', 'Positive/Active Infection'), ('positive_treated', 'Positive/Treated'), ('positive_chronic', 'Positive/Chronic'), ('positive_resolved', 'Positive/Resolved'), ('indeterminate', 'Indeterminate'), ('not_tested', 'Not Tested'), ('immune', 'Immune (Vaccinated/Natural)'), ('unknown', 'Unknown Status')], help_text='Status of infectious disease', max_length=20),
        ),
        migrations.AddField(
            model_name='observation',
            name='infectious_disease_type',
            field=models.CharField(blank=True, help_text='Type of infectious disease (HIV, HBV, HCV, etc.)', max_length=100),
        ),
        migrations.AddField(
            model_name='observation',
            name='lactation_status',
            field=models.BooleanField(blank=True, help_text='Currently lactating/breastfeeding', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='last_menstrual_period',
            field=models.DateField(blank=True, help_text='Date of last menstrual period', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='lives_alone',
            field=models.BooleanField(blank=True, help_text='Patient lives alone', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='menopausal_status',
            field=models.CharField(blank=True, choices=[('premenopausal', 'Premenopausal'), ('perimenopausal', 'Perimenopausal'), ('postmenopausal', 'Postmenopausal'), ('postmenopausal_natural', 'Postmenopausal (Natural)'), ('postmenopausal_surgical', 'Postmenopausal (Surgical)'), ('postmenopausal_treatment', 'Postmenopausal (Treatment-Induced)'), ('unknown', 'Unknown Menopausal Status'), ('not_applicable', 'Not Applicable (Male)')], help_text='Menopausal status', max_length=25),
        ),
        migrations.AddField(
            model_name='observation',
            name='menopause_age',
            field=models.IntegerField(blank=True, help_text='Age at menopause', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='mental_health_status',
            field=models.CharField(blank=True, choices=[('no_disorder', 'No Mental Health Disorder'), ('depression', 'Depression'), ('anxiety', 'Anxiety Disorder'), ('bipolar', 'Bipolar Disorder'), ('psychotic', 'Psychotic Disorder'), ('cognitive_impairment', 'Cognitive Impairment'), ('substance_induced', 'Substance-Induced Mental Disorder'), ('personality_disorder', 'Personality Disorder'), ('adjustment_disorder', 'Adjustment Disorder'), ('other', 'Other Mental Health Condition'), ('multiple', 'Multiple Mental Health Conditions'), ('unknown', 'Unknown Mental Health Status')], help_text='Mental health disorder status', max_length=25),
        ),
        migrations.AddField(
            model_name='observation',
            name='occupational_exposure',
            field=models.TextField(blank=True, help_text='Occupational hazard or toxin exposure history'),
        ),
        migrations.AddField(
            model_name='observation',
            name='pack_years',
            field=models.FloatField(blank=True, help_text='Pack-years of smoking (packs per day × years smoked)', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='pregnancy_status',
            field=models.CharField(blank=True, choices=[('not_pregnant', 'Not Pregnant (Confirmed)'), ('pregnant', 'Pregnant'), ('possibly_pregnant', 'Possibly Pregnant'), ('postpartum', 'Postpartum (< 6 months)'), ('lactating', 'Currently Lactating'), ('not_applicable', 'Not Applicable (Male/Postmenopausal)'), ('unknown', 'Unknown')], help_text='Current pregnancy status', max_length=20),
        ),
        migrations.AddField(
            model_name='observation',
            name='pregnancy_test_date',
            field=models.DateField(blank=True, help_text='Date of pregnancy test', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='risk_assessment_date',
            field=models.DateField(blank=True, help_text='Date of comprehensive risk assessment', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='smoking_cessation_date',
            field=models.DateField(blank=True, help_text='Date smoking was stopped (for former smokers)', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='smoking_status',
            field=models.CharField(blank=True, choices=[('never_smoker', 'Never Smoker'), ('current_smoker', 'Current Smoker'), ('former_smoker', 'Former Smoker'), ('passive_smoker', 'Passive Smoker (Environmental Exposure)'), ('unknown', 'Unknown Smoking Status')], help_text='Current smoking status', max_length=20),
        ),
        migrations.AddField(
            model_name='observation',
            name='social_data_complete',
            field=models.BooleanField(default=False, help_text='Indicates if social determinants assessment is complete'),
        ),
        migrations.AddField(
            model_name='observation',
            name='social_support_score',
            field=models.IntegerField(blank=True, help_text='Quantitative social support assessment score', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='substance_use_category',
            field=models.CharField(blank=True, choices=[('alcohol', 'Alcohol Use'), ('illicit_drugs', 'Illicit Drug Use'), ('prescription_misuse', 'Prescription Drug Misuse'), ('marijuana', 'Marijuana/Cannabis'), ('opioids', 'Opioid Use'), ('stimulants', 'Stimulant Use'), ('sedatives', 'Sedative/Hypnotic Use'), ('none', 'No Substance Use'), ('unknown', 'Unknown')], help_text='Category of substance use', max_length=20),
        ),
        migrations.AddField(
            model_name='observation',
            name='substance_use_details',
            field=models.TextField(blank=True, help_text='Detailed substance use history and patterns'),
        ),
        migrations.AddField(
            model_name='observation',
            name='tobacco_product_type',
            field=models.CharField(blank=True, choices=[('cigarettes', 'Cigarettes'), ('cigars', 'Cigars'), ('pipe', 'Pipe Tobacco'), ('chewing_tobacco', 'Chewing Tobacco'), ('snuff', 'Snuff'), ('e_cigarettes', 'Electronic Cigarettes/Vaping'), ('hookah', 'Hookah/Shisha'), ('other', 'Other Tobacco Product')], help_text='Type of tobacco product used', max_length=20),
        ),
        migrations.AddField(
            model_name='observation',
            name='transportation_access',
            field=models.BooleanField(blank=True, help_text='Has reliable transportation for medical visits', null=True),
        ),
        migrations.AddField(
            model_name='observation',
            name='vaccination_status',
            field=models.CharField(blank=True, help_text='Vaccination status for relevant diseases', max_length=100),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['behavioral_category'], name='observation_behavio_ae7fce_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['smoking_status'], name='observation_smoking_cbdad3_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['substance_use_category'], name='observation_substan_963bab_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['alcohol_use_level'], name='observation_alcohol_55735a_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['pregnancy_status'], name='observation_pregnan_0ff3c9_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['menopausal_status'], name='observation_menopau_ebac63_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['infectious_disease_status'], name='observation_infecti_0cb1ca_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['caregiver_status'], name='observation_caregiv_0d73ba_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['consent_capability'], name='observation_consent_9a9d47_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['mental_health_status'], name='observation_mental__c043f3_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['geographic_risk_category'], name='observation_geograp_26ee2c_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['eligible_for_trials'], name='observation_eligibl_8eaddb_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['risk_assessment_date'], name='observation_risk_as_61eb68_idx'),
        ),
        migrations.AddField(
            model_name='behavioralvocabulary',
            name='concept',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavioral_concepts', to='omop.concept'),
        ),
        migrations.AddField(
            model_name='infectiousdiseasevocabulary',
            name='concept',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='infectious_disease_concepts', to='omop.concept'),
        ),
        migrations.AddField(
            model_name='socialdeterminantsvocabulary',
            name='concept',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_determinant_concepts', to='omop.concept'),
        ),
        migrations.AddIndex(
            model_name='behavioralvocabulary',
            index=models.Index(fields=['observation_type'], name='behavioral__observa_321f35_idx'),
        ),
        migrations.AddIndex(
            model_name='behavioralvocabulary',
            index=models.Index(fields=['observation_name'], name='behavioral__observa_91d777_idx'),
        ),
        migrations.AddIndex(
            model_name='behavioralvocabulary',
            index=models.Index(fields=['loinc_code'], name='behavioral__loinc_c_49474a_idx'),
        ),
        migrations.AddIndex(
            model_name='behavioralvocabulary',
            index=models.Index(fields=['exclusion_criterion'], name='behavioral__exclusi_b8c028_idx'),
        ),
        migrations.AddIndex(
            model_name='behavioralvocabulary',
            index=models.Index(fields=['inclusion_criterion'], name='behavioral__inclusi_898c0c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='behavioralvocabulary',
            unique_together={('observation_type', 'observation_name')},
        ),
        migrations.AddIndex(
            model_name='infectiousdiseasevocabulary',
            index=models.Index(fields=['disease_name'], name='infectious__disease_baf3ea_idx'),
        ),
        migrations.AddIndex(
            model_name='infectiousdiseasevocabulary',
            index=models.Index(fields=['pathogen_type'], name='infectious__pathoge_f1c255_idx'),
        ),
        migrations.AddIndex(
            model_name='infectiousdiseasevocabulary',
            index=models.Index(fields=['icd10_code'], name='infectious__icd10_c_aa064a_idx'),
        ),
        migrations.AddIndex(
            model_name='infectiousdiseasevocabulary',
            index=models.Index(fields=['exclusion_criterion'], name='infectious__exclusi_e6ce91_idx'),
        ),
        migrations.AddIndex(
            model_name='infectiousdiseasevocabulary',
            index=models.Index(fields=['requires_monitoring'], name='infectious__require_5d536b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='infectiousdiseasevocabulary',
            unique_together={('disease_name', 'pathogen_type')},
        ),
        migrations.AddIndex(
            model_name='socialdeterminantsvocabulary',
            index=models.Index(fields=['determinant_category'], name='social_dete_determi_beed9d_idx'),
        ),
        migrations.AddIndex(
            model_name='socialdeterminantsvocabulary',
            index=models.Index(fields=['determinant_name'], name='social_dete_determi_7fa611_idx'),
        ),
        migrations.AddIndex(
            model_name='socialdeterminantsvocabulary',
            index=models.Index(fields=['z_code'], name='social_dete_z_code_3de774_idx'),
        ),
        migrations.AddIndex(
            model_name='socialdeterminantsvocabulary',
            index=models.Index(fields=['affects_eligibility'], name='social_dete_affects_af6b30_idx'),
        ),
        migrations.AddIndex(
            model_name='socialdeterminantsvocabulary',
            index=models.Index(fields=['health_impact_level'], name='social_dete_health__8ac675_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='socialdeterminantsvocabulary',
            unique_together={('determinant_category', 'determinant_name')},
        ),
    ]
